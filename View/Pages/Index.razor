@page "/"
@using Model.Entities.MonolithArena.InGame
@using WebApi.Dtos
@using Position = Model.Entities.MonolithArena.InGame.Position
@using Mapster
@inject HttpClient Http
@inject IGameRepository GameRepository

@inject NavigationManager NavigationManager

<MudContainer>
    @if (games.Count > 1)
    {
        <MudText Typo="Typo.h5" Class="my-5">Recent Games</MudText>
        <MudContainer Class="pl-0 pr-0 d-flex align-self-center" Style="margin-bottom: 5vh">
            @foreach (var game in games)
            {
                <GameCard GameId="game.Id"></GameCard>
            }
        </MudContainer>
    }

    <MudText Typo="Typo.h5" Class="my-5">Actions</MudText>
    <MudContainer Class="pl-0 pr-0 d-flex align-self-center" Style="margin-bottom: 5vh">
        <MudPaper onclick="@CreateLobby" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.Add" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">Create new game</MudText>
            </div>
        </MudPaper>
        <MudPaper onclick="@JoinLobby" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.ConnectWithoutContact" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">Join Lobby</MudText>
            </div>
        </MudPaper>
        <MudPaper onclick="@SpectateGame" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.RemoveRedEye" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">Spectate game</MudText>
            </div>
        </MudPaper>
        <MudPaper onclick="@GoToUsers" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.People" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">Users</MudText>
            </div>
        </MudPaper>
        <MudPaper onclick="@GoToGames" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.VideogameAsset" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">Games</MudText>
            </div>
        </MudPaper>
        <MudPaper onclick="@GoToSearch" Class="paper-link" Elevation="5">
            <div>
                <MudIcon Icon="@Icons.Material.Rounded.Search" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1">
                    Search <br/>
                    (Users and Games)
                </MudText>
            </div>
        </MudPaper>
    </MudContainer>
</MudContainer>

@code {

    private List<Game> games = new List<Game>();

    protected override async Task OnInitializedAsync()
    {
        //Console.WriteLine(NavigationManager.BaseUri);
        //Console.WriteLine(await Http.GetAsync("api/games"));
        // games = await Http.GetFromJsonAsync<List<GameListDto>>("api/games");
        games = (await GameRepository.ReadAsync()).ToList();

        await GameRepository.DeleteAsync(e => e.StartedAt < DateTime.Now.AddMonths(-2) && ! e.Users.Any(f => f.StarredThisGame));
    }

    private async Task CreateLobby()
    {
        // var gameResponse = await Http.PostAsJsonAsync("api/games", new GameCreateDto(new List<Position>(), new List<UserGame>(), new List<GameLog>()));
        var game = await GameRepository.CreateAsync(
            new GameCreateDto(new List<Position>(), new List<UserGame>(), new List<GameLog>()).Adapt<Game>());
        
        NavigationManager.NavigateTo($"/lobby/{game.Id}");
    }

    private void JoinLobby()
    {
        NavigationManager.NavigateTo("/lobbies");
    }

    private void SpectateGame()
    {
        throw new NotImplementedException();
    }

    private void GoToUsers()
    {
        NavigationManager.NavigateTo("/users");
    }

    private void GoToGames()
    {
        NavigationManager.NavigateTo("/games");
    }

    private void GoToSearch()
    {
        NavigationManager.NavigateTo("/search");
    }

}

<style>
    .paper-link {
        transition: transform .3s ease-in-out;
        width: 200px;
        min-height: 200px;
        border-radius: 20px;
        margin: 10px;
        
        display: inline-flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .paper-link:hover {
        transform: translateY(-10px);
        cursor: pointer;
    }
</style>